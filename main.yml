---
## Bootstrap the box on the AWS layer
- hosts: localhost
  vars_files:
    - my-vars.yml
  roles:
    - OULibraries.lastpass-cli
    - OULibraries.d7-lastpass
    - OULibraries.ec2-init
## Add the new box to the broker hosts file
- hosts: "{{ my_broker }}"
  vars_files:
    - my-vars.yml
  sudo: yes
  tasks:
    - name: Remove any previous hosts entries with this ip
      lineinfile:
        dest: /etc/hosts
        regexp: "^{{ item.private_ip_address }}"
        state: absent
        backup: yes
      with_items: "{{ hostvars['localhost']['ec2_post_info']['instances'] }}"
    - name: Remove any previous hosts entries with this name
      lineinfile:
        dest: /etc/hosts
        regexp: "{{ item.tags.Name }}"
        state: absent
        backup: yes
      with_items: "{{ hostvars['localhost']['ec2_post_info']['instances'] }}"
    - name: Add new server to hosts entry
      lineinfile:
        dest: /etc/hosts
        line: "{{ item.private_ip_address }} {{ item.tags.Name }}"
        state: present
        backup: yes
      with_items: "{{ hostvars['localhost']['ec2_post_info']['instances'] }}"
## Do provisioning inside the box
- hosts: ec2.unprovisioned
  vars_files:
    - my-vars.yml
  sudo: yes
  roles:
    - OULibraries.centos7
    - OULibraries.d7
    - OULibraries.users
## Do post-provisioning tasks on the AWS layer
- hosts: localhost
  tasks:
    - name: Tag instance after provisioning
      ec2_tag:
        region: "{{ item.region }}"
        resource: "{{ item.id }}"
        state: present
        tags:
          State: Provisioned
      with_items: "{{ hostvars['localhost']['ec2_post_info']['instances'] }}"
